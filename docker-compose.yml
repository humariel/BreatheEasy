version: '3.1'

volumes:
  kafka_data: {}
  zookeeper_data: {}
  zookeeper_datalog: {}
  mongo_data: 
    external: true

services:
    zookeeper:
        image: wurstmeister/zookeeper
        restart: always
        container_name: zookeeper
        ports:
            - 2181:2181
        volumes:
            - zookeeper_data:/data
            - zookeeper_datalog:/datalog

    kafka:    
        image: wurstmeister/kafka
        restart: always
        container_name: kafka
        ports:
            - 9092:9092
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092
            KAFKA_LISTENERS: INSIDE://kafka:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_CREATE_TOPICS: "entity:2:1,value:2:1,trigger:2:1,alarm:2:1,parish:2:1,trigger:2:1" #2 partitions, 1 replica 
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_LOG_RETENTION_HOURS: 24
            KAFKA_LOG_RETENTION_BYTES: 1073741824 #1GB
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - kafka_data:/var/lib/kafka/data      
        depends_on:
            - zookeeper
    
    mongo:
        image: mongo
        container_name: mongo
        ports:
            - 27017:27017
        volumes:
            - mongo_data:/data/db

    webserver:
        restart: always
        build: ./webserver
        container_name: webserver
        ports:
            - 8080:8080
        depends_on: 
            - kafka
            - gateway
            - mongo

    gateway:
        restart: always
        build: ./gateway
        container_name: gateway
        ports:
            - 8081:8081
        depends_on: 
            - kafka
            - mongo

    # frontend:
    #     restart: always
    #     build: ./frontend
    #     ports:
    #     - 3000:3000
    #     container_name: nuxt


